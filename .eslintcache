[{"/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/index.js":"1","/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/App.js":"2","/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/firebase.js":"3","/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/services/twilio.js":"4","/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/Lobby.js":"5","/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/screens/Room.js":"6","/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/screens/Participant.js":"7"},{"size":219,"mtime":1610133619121,"results":"8","hashOfConfig":"9"},{"size":398,"mtime":1610418097396,"results":"10","hashOfConfig":"9"},{"size":6917,"mtime":1610418097398,"results":"11","hashOfConfig":"9"},{"size":430,"mtime":1610418097400,"results":"12","hashOfConfig":"9"},{"size":8260,"mtime":1610418097397,"results":"13","hashOfConfig":"9"},{"size":2061,"mtime":1610418097400,"results":"14","hashOfConfig":"9"},{"size":2189,"mtime":1610418097399,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"qnogp0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/index.js",[],["33","34"],"/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/App.js",["35"],"/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/firebase.js",["36"],"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAnBHQu1jUpzuz-rymVFxtBsbOFVnPuxsA\",\n  authDomain: \"firestore-project-a4b07.firebaseapp.com\",\n  projectId: \"firestore-project-a4b07\",\n  storageBucket: \"firestore-project-a4b07.appspot.com\",\n  messagingSenderId: \"423972607278\",\n  appId: \"1:423972607278:web:7457d57f2227c1b5e016bf\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.firestore();\n\nexport const authenticateAnonymously = () => {\n  return firebase.auth().signInAnonymously();\n};\n\n/**\n * @description getGame\n * Returns a single game object based on gameId\n * @params gameId - {string} - the id of the targeted game\n */\nexport const getGame = async (gameId) => {\n  const snapshot = await db.collection(\"game\").doc(gameId).get();\n  return snapshot;\n};\n\n/**\n * @description getGames\n * Queries all rooms and returns an array of all game documents\n */\nexport const getAllGames = async () => {\n  const snapshot = await db.collection(\"rooms\").get();\n  return snapshot.docs.map((doc) => doc.data());\n};\n\n/**\n * @description addPlayer\n * Adds a  new player to the targeted game\n * @params userName - {string} - the id of the targeted user\n * @params userId - {string} - the id of the targeted user\n */\nexport const addPlayer = async (newPlayer, gameId) => {\n  const { userId, username } = newPlayer;\n  const snapshot = await db\n    .collection(\"rooms\")\n    .doc(gameId)\n    .collection(\"players\")\n    .doc(userId)\n    .set({\n      id: userId,\n      username: username,\n      ready: false,\n      score: 0,\n    });\n  return snapshot;\n};\n\n/**\n * @description getPlayers\n * Queries all players from a targeted game and returns an array of all player documents\n * @params gameId - {string} - the id of the targeted game\n */\nexport const getPlayers = async (gameId) => {\n  const snapshot = await db\n    .collection(\"rooms\")\n    .doc(gameId)\n    .collection(\"players\");\n\n  return snapshot;\n  // return snapshot.docs.map(doc => doc.data())\n};\n\n/**\n * @description readyPlayer\n * Adds a  new player to the targeted game\n * @params updatedPlayer - {string} - the updated player object\n * @params gameId - {string} - the id of the targeted game\n */\nexport const readyPlayer = async (userId, gameId) => {\n  console.log(userId);\n  // const {userId} = updatedPlayer\n  const snapshot = await db\n    .collection(\"rooms\")\n    .doc(gameId)\n    .collection(\"players\")\n    .doc(userId)\n    .update({\n      ready: true,\n    });\n  return snapshot;\n};\n\n// export const editPlayer = (updatedPlayer) => {\n//   setLoading();\n//   ref\n//     .doc(updatedPlayer.id)\n//     .update(updatedPlayer)\n//     .catch((err) => {\n//       console.error(err);\n//     });\n// };\n\n// export const addPlayer = (newPlayer) => {\n//   ref\n//     .doc(newPlayer.id)\n//     .set(newPlayer)\n//     .catch((err) => {\n//       console.error(err);\n//     });\n// };\n\n// export const deletePlayer = (Player) => {\n//   ref\n//     .doc(Player.id)\n//     .delete()\n//     .catch((err) => {\n//       console.log(err);\n//     });\n//   setDisabled(false);\n// };\n\n// export const editPlayer = (updatedPlayer) => {\n//   setLoading();\n//   ref\n//     .doc(updatedPlayer.id)\n//     .update(updatedPlayer)\n//     .catch((err) => {\n//       console.error(err);\n//     });\n// };\n\n/**\n * @description dealCard\n * Takes 1 card from relevant card stack, copies to indicated player's hand, deletes card from stack\n * Rev 0: in game1, sends 1 card from dareStack to players.playerID.cards\n * @params playerId - {string} - the id of the player to receive a card\n */\nexport const dealCard = async (playerId) => {\n  const cardSnapshot = await db\n    .collection(\"rooms\")\n    .doc(\"game1\")\n    .collection(\"dareStack\")\n    .get();\n  const cards = await cardSnapshot.docs.map(async (card) => card.data());\n  let cardToSet = await cards[0];\n  const cardSetSnapshot = await db\n    .collection(\"rooms\")\n    .doc(\"game1\")\n    .collection(\"players\")\n    .doc(playerId)\n    .collection(\"cards\")\n    .doc(`${cardToSet.id}`)\n    .set({\n      id: cardToSet.id,\n      text: cardToSet.text,\n    });\n  await console.log(\"card set\");\n  const cardDeleteSnapshot = await db\n    .collection(\"rooms\")\n    .doc(\"game1\")\n    .collection(\"dareStack\")\n    .where(\"id\", \"==\", cardToSet.id)\n    .get();\n  const cardDelete = await cardDeleteSnapshot.docs.map(async (doc) => {\n    await doc.ref.delete();\n    await console.log(\"card deleted\");\n  });\n  return cardDelete;\n};\n","/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/services/twilio.js",["37"],"const BASE = \"http://localhost:8000/api\";\nconst LIVE = \"https://kind-bulldog-61.loca.lt/api\";\n\nexport const getTwilioToken = async (userInfo) => {\n  const { identity, room } = userInfo;\n  return fetch(`${BASE}/token/`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      identity: identity,\n      room: room,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => data);\n};\n","/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/Lobby.js",["38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53"],"/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/screens/Room.js",[],"/Users/juliusbautista/MikePlatoon/challenges/w13/ghrepo/todfront/truth_or_dare_frontend/src/screens/Participant.js",["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":151,"column":9,"nodeType":"62","messageId":"63","endLine":151,"endColumn":24},{"ruleId":"60","severity":1,"message":"65","line":2,"column":7,"nodeType":"62","messageId":"63","endLine":2,"endColumn":11},{"ruleId":"60","severity":1,"message":"66","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":38},{"ruleId":"60","severity":1,"message":"67","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":12},{"ruleId":"60","severity":1,"message":"68","line":7,"column":24,"nodeType":"62","messageId":"63","endLine":7,"endColumn":30},{"ruleId":"60","severity":1,"message":"69","line":7,"column":32,"nodeType":"62","messageId":"63","endLine":7,"endColumn":40},{"ruleId":"60","severity":1,"message":"70","line":7,"column":42,"nodeType":"62","messageId":"63","endLine":7,"endColumn":47},{"ruleId":"60","severity":1,"message":"71","line":7,"column":49,"nodeType":"62","messageId":"63","endLine":7,"endColumn":57},{"ruleId":"60","severity":1,"message":"72","line":62,"column":10,"nodeType":"62","messageId":"63","endLine":62,"endColumn":18},{"ruleId":"60","severity":1,"message":"73","line":64,"column":10,"nodeType":"62","messageId":"63","endLine":64,"endColumn":18},{"ruleId":"60","severity":1,"message":"74","line":64,"column":20,"nodeType":"62","messageId":"63","endLine":64,"endColumn":31},{"ruleId":"60","severity":1,"message":"75","line":65,"column":10,"nodeType":"62","messageId":"63","endLine":65,"endColumn":18},{"ruleId":"60","severity":1,"message":"76","line":65,"column":20,"nodeType":"62","messageId":"63","endLine":65,"endColumn":31},{"ruleId":"60","severity":1,"message":"77","line":69,"column":10,"nodeType":"62","messageId":"63","endLine":69,"endColumn":15},{"ruleId":"60","severity":1,"message":"78","line":73,"column":19,"nodeType":"62","messageId":"63","endLine":73,"endColumn":29},{"ruleId":"60","severity":1,"message":"79","line":75,"column":10,"nodeType":"62","messageId":"63","endLine":75,"endColumn":15},{"ruleId":"60","severity":1,"message":"80","line":75,"column":17,"nodeType":"62","messageId":"63","endLine":75,"endColumn":25},{"ruleId":"60","severity":1,"message":"81","line":80,"column":9,"nodeType":"62","messageId":"63","endLine":80,"endColumn":23},{"ruleId":"60","severity":1,"message":"82","line":6,"column":10,"nodeType":"62","messageId":"63","endLine":6,"endColumn":15},{"ruleId":"60","severity":1,"message":"83","line":6,"column":17,"nodeType":"62","messageId":"63","endLine":6,"endColumn":25},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'cardSetSnapshot' is assigned a value but never used.","'LIVE' is assigned a value but never used.","'useCallback' is defined but never used.","'Room' is defined but never used.","'Select' is defined but never used.","'Textarea' is defined but never used.","'Radio' is defined but never used.","'Checkbox' is defined but never used.","'screenID' is assigned a value but never used.","'identity' is assigned a value but never used.","'setIdentity' is assigned a value but never used.","'roomName' is assigned a value but never used.","'setRoomName' is assigned a value but never used.","'error' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'ready' is assigned a value but never used.","'setReady' is assigned a value but never used.","'handleCallback' is assigned a value but never used.","'muted' is assigned a value but never used.","'setMuted' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]